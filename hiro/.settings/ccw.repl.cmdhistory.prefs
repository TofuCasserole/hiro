#Tue Apr 17 16:07:12 EDT 2012
cmdhistory=["(ns hiro.dialog\\r\\n  (\:import de.saar.coli.salsa.reiter.framenet.FrameNet))" "(ns hiro.dialog\\r\\n  (\:import de.saar.coli.salsa.reiter.framenet FrameNet FNDatabaseReader15))" "(import (java.util Date Time))" "(import (java.util Date List))" "(ns hiro.dialog\\n  (\:import (java.util.Date)))" "(ns hiro.dialog\\n  (\:import (java.util Date Time)))" "(ns hiro.dialog\\n  (\:import (java.util Date List)))" "(ns hiro.dialog\\n  (\:import (java.util *)))" "(slurp \\"src/hiro/dialog.clj\\")" "(new File \\"src/hiro/dialog.clj\\")" "(import java.io.File)" "(new File \\"src/hiro/dialog.clj\\")" "(get-frame-db \\"\\\\\\\\fndata-1.5\\")" "(get-frame-db \\".\\\\\\\\fndata-1.5\\")" "(.getFrames (get-frame-db \\".\\\\\\\\fndata-1.5\\"))" "(defvar frame-net (get-frame-db \\".\\\\\\\\fndata-1.5\\"))" "(var frame-net (get-frame-db \\".\\\\\\\\fndata-1.5\\"))" "(def frame-net (get-frame-db \\".\\\\\\\\fndata-1.5\\"))" "(import (de.saar.coli.salsa.reiter.framenet Frame))" "(.getFrame frame-net \\"Causation\\")" "(-> (.getFrame frame-net \\"Causation\\")\\n  (.frameElements))" "(-> (.getFrame frame-net \\"Causation\\")\\n  (.getLexicalUnits))" "(cons agent '(1 2))" "(cons 'agent '(1 2))" "(apply (fn [x y] (do\\n                   (prn x y)\\n                   (+ x y)))\\n       '(1 2 3 4))" "(apply (fn [x y] (do\\n                   (prn x y)\\n                   (+ x y)))\\n       1 2 3 4)" "(apply (fn [x y] (do\\n                   (prn x y)\\n                   (+ x y)))\\n       1 2 3 (4))" "(apply (fn [x y] (do\\n                   (prn x y)\\n                   (+ x y)))\\n       '(1 2))" "(apply (fn [x y] (do\\n                   (prn x y)\\n                   (+ x y)))\\n       '(1 2 3))" "(cons struct-map '(\:name \\"tom\\" \:emotion 0))" "(cons 'struct-map '(\:name \\"tom\\" \:emotion 0))" "(cons '(1 2) '(3 4))" "(macroexpand '(create-state (agent \:name \\"tom\\" \:emotion 1)))" "(if '() 1 2)" "(if '(1) 1 2)" "(if '(1) 2 3)" "(if (rest '(1)) 2 3)" "(if (rest '()) 2 3)" "(rest '())" "(first '())" "(struct-map state \:agents {} \:events [])" "(def state struct-map state \:agents {} \:events [])" "(def state (struct-map state \:agents {} \:events []))" "state" "(-> state (accessor state \:agents))" "(apply (accessor state \:agents) state)" "(apply (accessor state \:agents) '(state))" "(def current-state (struct-map state \:agents {} \:events []))" "(apply (accessor state \:agents) '(current-state))" "(apply (accessor state \:agents) 'current-state)" "(apply (accessor state \:agents) current-state)" "(apply (accessor state \:agents) '(current-state))" "(apply \#(struct-map agent) '(\:name \\"tom\\"))" "(apply \#(struct-map agent %) '(\:name \\"tom\\"))" "(macroexpand '(->> agent-values (struct-map agent)))" "(let [foo '(0 1 2)]\\n  (macroexpand (->> foo (struct-map agent))))" "(let [foo '(0 1 2)]\\n  (macroexpand '(->> foo (struct-map agent))))" "(let [foo '(0 1 2)]\\n  (macroexpand `(->> ~foo (struct-map agent))))" "(+ 1 ~@(1 2))" "(eval `(+ 1 ~@(1 2)))" "(eval (+ 1 2))" "(+ 1 2)" "(eval '(+ 1 2))" "`(+ 1 ~@(1 2))" "`(+ 1 ~@'(1 2))" "(+ 1 ~@'(1 2))" "(eval `(+ 1 ~@'(1 2)))"]
eclipse.preferences.version=1
